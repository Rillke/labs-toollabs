#!/usr/bin/python3
#
# Copyright (C) 2017  Tim Landscheidt
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
import pwd
import shutil
import subprocess
import sys
import tempfile

# Both temporary files need to be created in the tool's home directory
# on NFS so they can be accessed from any grid host.
home_directory = pwd.getpwuid(os.getuid()).pw_dir
with tempfile.NamedTemporaryFile(mode='w+',
                                 suffix='.in',
                                 prefix='jmail-',
                                 dir=home_directory) as input, \
     tempfile.NamedTemporaryFile(mode='w+',
                                 suffix='.out',
                                 prefix='jmail-',
                                 dir=home_directory) as output:
    # Determine the full path of the program to execute.
    program = shutil.which(sys.argv[1])
    if program is None:
        sys.exit('Processing program unavailable')

    # Copy the incoming message from stdin to the temporary file.
    shutil.copyfileobj(sys.stdin, input)
    input.flush()

    # Execute the given program synchronously on the grid.
    rv = subprocess.call(['/usr/bin/qsub',
                          '-N', 'mail.' + pwd.getpwuid(os.getuid()).pw_name,
                          '-sync', 'y',
                          '-b', 'y',
                          '-m', 'n',
                          '-o', output.name,
                          '-j', 'y',
                          '-i', input.name,
                          '-q', 'mailq',
                          '-l', 'h_vmem=500M',
                          '-r', 'n', program] + sys.argv[2:],
                         stdout=subprocess.DEVNULL)

    # Copy the output of the program to stdout.
    shutil.copyfileobj(output, sys.stdout)
    sys.exit(rv)
